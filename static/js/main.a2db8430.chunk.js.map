{"version":3,"sources":["store/actions/ui.ts","theme.ts","store/reducers/ui.ts","store/store.ts","components/Fade/Fade.tsx","components/Icon/Icon.tsx","components/Input/Input.tsx","containers/Header/Bar/HeaderBar.tsx","components/useClick/useClick.tsx","components/Switch/Switch.tsx","components/Menu/Menu.tsx","containers/Header/AccountMenu/HeaderAccountMenu.tsx","containers/Header/Header.tsx","components/useKeyboard/useKeyboard.tsx","components/Card/Card.tsx","containers/New/ActionBar/NewActionBar.tsx","containers/New/Note/NewNote.tsx","containers/New/New.tsx","containers/SideBar/SideBar.tsx","containers/App/App.tsx","serviceWorker.ts","index.tsx","routes.ts"],"names":["UIActions","setSearch","searchValue","type","SEARCH","toggleSideBar","TOGGLE_SIDE_BAR","Themes","lightTheme","color","primary","primaryLight","secondary","border","background","hover","darkTheme","initialState","sideBarOpen","theme","LIGHT","reducer","combineReducers","ui","state","action","TOGGLE_DARK_THEME","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Span","styled","span","Fade","children","visible","speed","didMountRef","useRef","ref","useEffect","el","current","anime","begin","style","display","targets","duration","easing","opacity","show","complete","hide","pause","EmpDiv","div","Div","Icon","width","height","props","viewBox","d","Input","input","TextArea","textarea","StyledHeaderBar","header","HeaderBar","expanded","margin","marginBottom","borderRadius","expand","collapse","useClick","listener","deps","addEventListener","removeEventListener","USwitch","USlider","enabled","Switch","value","onSwitch","onClick","Menu","StaticMenuItem","UIcon","WithIcon","MenuItem","Seperator","UMenu","HeaderAccountMenu","username","onHide","dispatch","useDispatch","navigate","useRouter","useSelector","menuRef","ev","contains","target","clicked","wrapClicks","fun","mdiAccountCircleOutline","mdiAccountMultiple","mdiSettings","mdiWeatherNight","DARK","toggleDarkTheme","undefined","mdiLogoutVariant","mdiLoginVariant","MenuIcon","AccountIcon","UInput","Header","inputRef","useState","menuOpened","setMenuOpened","searching","setSearching","prevRoute","setPrevRoute","route","useRoute","useKeyboard","key","name","blur","focus","params","mdiArrowLeft","mdiMenu","placeholder","onFocus","onChange","e","onKeyPress","Card","UCard","Actions","Action","NewActionBar","onNew","readOnly","checked","mdiCheckBoxOutline","image","mdiImageOutline","TopBar","TitleInput","Body","BodyInput","Scroll","CloseButton","NewNote","onClose","cardRef","didMount","card","bottom","innerWidth","mdiPinOutline","rows","mdiBellPlusOutline","mdiAccountPlusOutline","mdiPaletteOutline","mdiPackageDown","mdiLabelOutline","mdiUndo","mdiRedo","New","newMode","setNewMode","setChecked","Title","h1","Footer","small","SideBar","menu","sideBar","left","wrapClick","mdiLightbulbOutline","mdiBellOutline","mdiPencilOutline","mdiTrashCanOutline","Container","App","setEl","useRouteNode","Boolean","location","hostname","match","router","createRouter","path","defaultParams","allowNotFound","caseSensitive","usePlugin","browserPlugin","start","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2db8430.chunk.js","sourcesContent":["import { Action } from 'redux';\nimport { Themes } from '../../theme';\n\nexport enum UIActions {\n  SEARCH = 'UI2',\n  TOGGLE_DARK_THEME = 'UI0',\n  TOGGLE_SIDE_BAR = 'UI1'\n}\nexport interface UIAction extends Action<UIActions> {\n  theme?: Themes;\n  searchValue?: string;\n}\n\nexport const setSearch = (searchValue: string): UIAction => ({\n  type: UIActions.SEARCH,\n  searchValue\n});\n\nexport const toggleDarkTheme = (theme: Themes): UIAction => ({\n  type: UIActions.TOGGLE_DARK_THEME,\n  theme\n});\n\nexport const toggleSideBar = {\n  type: UIActions.TOGGLE_SIDE_BAR\n};\n","export enum Themes {\n  LIGHT,\n  DARK\n}\n\nexport interface Theme {\n  color: {\n    primary: string;\n    primaryLight: string;\n    secondary: string;\n    border: string;\n  };\n  background: {\n    primary: string;\n    secondary: string;\n    hover: string;\n  };\n}\n\nexport interface ThemeProps {\n  theme?: Theme;\n}\n\nexport const lightTheme: Theme = {\n  color: {\n    primary: '#000',\n    primaryLight: '#888',\n    secondary: '#FFEB3B',\n    border: '#ddd'\n  },\n  background: {\n    primary: '#fff',\n    secondary: '#fcfcfc',\n    hover: '#eee'\n  }\n};\n\nexport const darkTheme: Theme = {\n  color: {\n    primary: '#eee',\n    primaryLight: '#bbb',\n    secondary: '#C0B12C',\n    border: '#444'\n  },\n  background: {\n    primary: '#333',\n    secondary: '#222',\n    hover: '#444'\n  }\n};\n","import { UIAction, UIActions } from '../actions/ui';\nimport { Themes } from '../../theme';\n\nexport interface UIState {\n  searchValue: string;\n  sideBarOpen: boolean;\n  theme: Themes;\n}\n\nconst initialState: UIState = {\n  searchValue: '',\n  sideBarOpen: false,\n  theme: Themes.LIGHT\n};\n\nexport const uiReducer = (state = initialState, action: UIAction): UIState => {\n  switch (action.type) {\n    case UIActions.SEARCH:\n      return {\n        ...state,\n        searchValue: action.searchValue!\n      };\n    case UIActions.TOGGLE_DARK_THEME:\n      return {\n        ...state,\n        theme: action.theme!\n      };\n    case UIActions.TOGGLE_SIDE_BAR:\n      return {\n        ...state,\n        sideBarOpen: !state.sideBarOpen\n      };\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { uiReducer, UIState } from './reducers/ui';\n\nexport interface ReduxState {\n  ui: UIState;\n}\nconst reducer = combineReducers<ReduxState>({\n  ui: uiReducer\n});\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React, { useRef, useEffect } from 'react';\n\nimport anime from 'animejs';\nimport styled from '@emotion/styled';\n\nconst hide = (el: HTMLElement, speed: number) =>\n  anime({\n    targets: el,\n    duration: speed,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    opacity: [1, 0],\n    complete: () => (el.style.display = 'none')\n  });\nconst show = (el: HTMLElement, speed: number) =>\n  anime({\n    begin: () => (el.style.display = 'initial'),\n    targets: el,\n    duration: speed,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    opacity: [0, 1]\n  });\n\nconst Span = styled.span`\n  display: none;\n  opacity: 0;\n`;\n\ninterface FadeProps {\n  visible: boolean;\n  speed?: number;\n}\nexport const Fade: React.FC<FadeProps> = ({\n  children,\n  visible,\n  speed = 100\n}) => {\n  const didMountRef = useRef(false);\n  const ref = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const el = ref.current!;\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n      if (!visible) {\n        return;\n      }\n    }\n    const anim = visible ? show(el, speed) : hide(el, speed);\n    return anim.pause;\n  }, [visible, speed]);\n\n  return <Span ref={ref}>{children}</Span>;\n};\n","import React from 'react';\n\nimport styled from '@emotion/styled';\nimport { ThemeProps } from '../../theme';\n\nconst EmpDiv = styled.div<ThemeProps>`\n  display: block;\n  padding: auto;\n  cursor: pointer;\n  & > svg > path {\n    fill: ${({ theme }) => theme.color.primary};\n  }\n  :hover {\n    background: ${({ theme }) => theme.background.hover};\n    border-radius: 50%;\n  }\n  :focus {\n    background: ${({ theme }) => theme.background.hover};\n    border-radius: 50%;\n  }\n`;\n\nconst Div = styled.div<ThemeProps>`\n  display: block;\n  padding: auto;\n  cursor: pointer;\n  & > svg > path {\n    fill: ${({ theme }) => theme.color.primaryLight};\n  }\n  :hover {\n    & > svg > path {\n      fill: ${({ theme }) => theme.color.primary};\n    }\n  }\n  :focus {\n    & > svg > path {\n      fill: ${({ theme }) => theme.color.primary};\n    }\n  }\n`;\ninterface IconProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  children: string;\n  width?: string;\n  height?: string;\n}\nexport const Icon: React.FC<IconProps> = ({\n  children,\n  width = '1.5em',\n  height = '1.5em',\n  ...props\n}) => {\n  return (\n    <Div {...props}>\n      <svg style={{ width, height }} viewBox=\"0 0 24 24\">\n        <path d={children} />\n      </svg>\n    </Div>\n  );\n};\nexport const EmpIcon: React.FC<IconProps> = ({\n  children,\n  width = '1.5em',\n  height = '1.5em',\n  ...props\n}) => {\n  return (\n    <EmpDiv {...props}>\n      <svg style={{ width, height }} viewBox=\"0 0 24 24\">\n        <path d={children} />\n      </svg>\n    </EmpDiv>\n  );\n};\n","import styled from '@emotion/styled';\nimport { ThemeProps } from '../../theme';\n\nexport const Input = styled.input<ThemeProps>`\n  background: ${({ theme }) => theme.background.primary};\n  color: ${({ theme }) => theme.color.primary};\n  margin-left: 0.5em;\n  margin-right: 0.5em;\n  width: 100%;\n  height: 100%;\n  border: none;\n  outline: none;\n  :focus {\n    border: none;\n    outline: none;\n  }\n`;\n\nexport const TextArea = styled.textarea<ThemeProps>`\n  font-family: inherit;\n  resize: none;\n  background: ${({ theme }) => theme.background.primary};\n  color: ${({ theme }) => theme.color.primary};\n  margin-left: 0.5em;\n  margin-right: 0.5em;\n  width: 100%;\n  height: 100%;\n  min-height: 0;\n  border: none;\n  outline: none;\n  :focus {\n    border: none;\n    outline: none;\n  }\n`;\n","import React, { useRef, useEffect } from 'react';\n\nimport anime from 'animejs';\nimport styled from '@emotion/styled';\nimport { ThemeProps } from '../../../theme';\n\nconst expand = (el: HTMLElement) =>\n  anime({\n    targets: el,\n    duration: 250,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    margin: ['1em', '0'],\n    marginBottom: '1em',\n    borderRadius: ['0.5em', '0']\n  });\nconst collapse = (el: HTMLElement) =>\n  anime({\n    targets: el,\n    duration: 200,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    margin: ['0', '1em'],\n    marginBottom: '1em',\n    borderRadius: ['0', '0.5em']\n  });\n\nconst StyledHeaderBar = styled.header<ThemeProps>`\n  background: ${({ theme }) => theme.background.primary};\n  color: ${({ theme }) => theme.color.primary};\n  display: flex;\n  align-items: center;\n  height: 3.5em;\n  margin-bottom: 1em;\n  border-bottom: 1px solid ${({ theme }) => theme.color.border};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.16), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\ninterface HeaderBarProps\n  extends ThemeProps,\n    React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement> {\n  expanded: boolean;\n}\nexport const HeaderBar: React.FC<HeaderBarProps> = ({ expanded, ...props }) => {\n  const ref = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    const el = ref.current!;\n    const anim = expanded ? expand(el) : collapse(el);\n    return anim.pause;\n  }, [expanded]);\n\n  return <StyledHeaderBar ref={ref} {...props} />;\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\n\nexport const useClick = (\n  listener?: (ev: MouseEvent) => void,\n  deps: any[] = []\n) =>\n  useEffect(() => {\n    if (!listener) return;\n    window.addEventListener('click', listener);\n    return () => window.removeEventListener('click', listener);\n  }, deps);\n","import React from 'react';\n\nimport styled from '@emotion/styled';\nimport { ThemeProps } from '../../theme';\n\nconst USwitch = styled.span<ThemeProps>`\n  position: relative;\n  display: inline-block;\n  width: 3em;\n  height: 1.5em;\n  padding: 0.1em;\n  border-radius: 1em;\n  background: ${({ theme }) => theme.background.hover};\n`;\n\nconst USlider = styled.span<ThemeProps & { enabled: boolean }>`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${({ enabled, theme }) =>\n    enabled ? theme.color.secondary : theme.background.hover};\n  transition: 0.2s;\n  border-radius: 1em;\n  &::before {\n    position: absolute;\n    content: '';\n    height: 1.2em;\n    width: 1.2em;\n    left: 0.3em;\n    bottom: 0.15em;\n    background-color: ${({ theme }) => theme.color.primary};\n    transition: 0.2s;\n    border-radius: 50%;\n    ${({ enabled }) => (enabled ? 'transform: translateX(1.2em)' : '')}\n  }\n`;\n\ninterface SwitchProps {\n  value: boolean;\n  onSwitch: (enabled: boolean) => void;\n}\nexport const Switch: React.FC<SwitchProps> = ({ value, onSwitch }) => {\n  return (\n    <USwitch onClick={() => onSwitch(!value)}>\n      <USlider enabled={value} />\n    </USwitch>\n  );\n};\n","import styled from '@emotion/styled';\nimport { ThemeProps } from '../../theme';\nimport { Icon as UIcon } from '../Icon/Icon';\n\nexport const Menu = styled.div<ThemeProps>`\n  display: flex;\n  flex-direction: column;\n  max-height: 100vh;\n  background: ${({ theme }) => theme.background.primary};\n  border: 1px solid ${({ theme }) => theme.color.border};\n  overflow-y: auto;\n  padding: 0.25em 0;\n\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.16), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const StaticMenuItem = styled.span<ThemeProps>`\n  padding: 1em 1.5em;\n  font-size: 0.8rem;\n  width: 100%;\n  text-align: left;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Icon = styled(UIcon)`\n  font-size: 0.8rem;\n  margin-right: 0.5em;\n  height: 1.5em;\n  width: 1.5em;\n`;\n\nexport const WithIcon = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nexport const MenuItem = styled(StaticMenuItem)`\n  cursor: pointer;\n  &:hover {\n    background: ${({ theme }) => theme.background.hover};\n  }\n`;\n\nexport const Seperator = styled.span<ThemeProps>`\n  margin: 0.25em 0.75em;\n  border: 1px solid ${({ theme }) => theme.color.border};\n`;\n","import React, { useRef, useEffect } from 'react';\nimport { useClick } from '../../../components/useClick/useClick';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'react-router5';\n\nimport styled from '@emotion/styled';\nimport {\n  mdiAccountCircleOutline,\n  mdiAccountMultiple,\n  mdiSettings,\n  mdiWeatherNight,\n  mdiLoginVariant,\n  mdiLogoutVariant\n} from '@mdi/js';\nimport { Themes } from '../../../theme';\nimport { Switch } from '../../../components/Switch/Switch';\nimport {\n  Menu as UMenu,\n  MenuItem,\n  Seperator,\n  StaticMenuItem,\n  Icon,\n  WithIcon\n} from '../../../components/Menu/Menu';\n\nimport { ReduxState } from '../../../store/store';\nimport { toggleDarkTheme } from '../../../store/actions/ui';\n\nconst Menu = styled(UMenu)`\n  opacity: 1;\n  position: absolute;\n  right: 1em;\n  top: 5em;\n  width: 200px;\n  max-height: calc(100vh - 8.5em);\n  border-radius: 0.25em;\n`;\n\ninterface HeaderAccountMenuProps {\n  username?: string;\n  onHide: () => void;\n}\nexport const HeaderAccountMenu: React.FC<HeaderAccountMenuProps> = ({\n  username,\n  onHide\n}) => {\n  const dispatch = useDispatch();\n  const { navigate } = useRouter();\n  const theme = useSelector<ReduxState, Themes>(state => state.ui.theme);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  useClick(\n    ev => {\n      const menu = menuRef.current!;\n      if (!menu.contains(ev.target as Node)) {\n        onHide();\n      }\n    },\n    [onHide]\n  );\n  useEffect(() => {\n    const clicked = (ev: MouseEvent) => {\n      const menu = menuRef.current!;\n      if (!menu.contains(ev.target as Node)) {\n        onHide();\n      }\n    };\n    window.addEventListener('click', clicked);\n    return () => window.removeEventListener('click', clicked);\n  }, [onHide]);\n\n  const wrapClicks = (fun: () => any) => () => {\n    onHide();\n    fun();\n  };\n\n  return (\n    <Menu ref={menuRef}>\n      {username ? (\n        <>\n          <StaticMenuItem>\n            <WithIcon>\n              <Icon>{mdiAccountCircleOutline}</Icon>\n              Username\n            </WithIcon>\n          </StaticMenuItem>\n          <MenuItem onClick={wrapClicks(() => navigate('friends'))}>\n            <WithIcon>\n              <Icon>{mdiAccountMultiple}</Icon>\n              Friends\n            </WithIcon>\n          </MenuItem>\n          <Seperator />\n        </>\n      ) : null}\n      <MenuItem onClick={wrapClicks(() => navigate('settings'))}>\n        <WithIcon>\n          <Icon>{mdiSettings}</Icon>\n          Settings\n        </WithIcon>\n      </MenuItem>\n      <StaticMenuItem>\n        <WithIcon>\n          <Icon>{mdiWeatherNight}</Icon>\n          Dark Theme\n        </WithIcon>\n        <Switch\n          value={theme === Themes.DARK}\n          onSwitch={value =>\n            dispatch(toggleDarkTheme(value ? Themes.DARK : Themes.LIGHT))\n          }\n        />\n      </StaticMenuItem>\n      <Seperator />\n      <MenuItem\n        onClick={username ? undefined : wrapClicks(() => navigate('login'))}\n      >\n        <WithIcon>\n          <Icon>{username ? mdiLogoutVariant : mdiLoginVariant}</Icon>\n          {username ? 'Log Out' : 'Log In'}\n        </WithIcon>\n      </MenuItem>\n    </Menu>\n  );\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter, useRoute } from 'react-router5';\nimport { useKeyboard } from '../../components/useKeyboard/useKeyboard';\n\nimport styled from '@emotion/styled';\nimport { mdiAccountCircleOutline, mdiMenu, mdiArrowLeft } from '@mdi/js';\nimport { Fade } from '../../components/Fade/Fade';\nimport { Icon, EmpIcon } from '../../components/Icon/Icon';\nimport { Input as UInput } from '../../components/Input/Input';\nimport { HeaderBar } from './Bar/HeaderBar';\nimport { HeaderAccountMenu } from './AccountMenu/HeaderAccountMenu';\n\nimport { toggleSideBar, setSearch } from '../../store/actions/ui';\nimport { ReduxState } from '../../store/store';\n\nconst MenuIcon = styled(EmpIcon)`\n  padding: 0.5em;\n  width: 2.5em;\n  height: 2.5em;\n  margin-left: 0.5em;\n`;\nconst AccountIcon = styled(Icon)`\n  padding: 0.5em;\n  width: 2.5em;\n  height: 2.5em;\n  margin-right: 0.5em;\n`;\nconst Input = styled(UInput)`\n  font-size: 1rem;\n`;\nexport const Header: React.FC = () => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [menuOpened, setMenuOpened] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [prevRoute, setPrevRoute] = useState('notes');\n  const value = useSelector<ReduxState, string>(state => state.ui.searchValue);\n\n  const dispatch = useDispatch();\n  const { navigate } = useRouter();\n  const { route } = useRoute();\n\n  useKeyboard(\n    searching\n      ? ev => {\n          if (ev.key === 'Escape') {\n            setSearching(false);\n            if (route.name === 'search') {\n              navigate(prevRoute);\n            }\n            inputRef.current!.blur();\n          }\n        }\n      : undefined,\n    [navigate, prevRoute, route, searching]\n  );\n\n  useEffect(() => {\n    if (!searching) {\n      dispatch(setSearch(''));\n    }\n  }, [dispatch, searching]);\n\n  useEffect(() => {\n    if (route.name === 'search') {\n      inputRef.current!.focus();\n      dispatch(setSearch(route.params.value));\n    }\n  }, [dispatch, route.params.value, route.name]);\n\n  return (\n    <HeaderBar expanded={searching}>\n      <MenuIcon\n        onClick={\n          searching\n            ? () => {\n                setSearching(false);\n                if (route.name === 'search') {\n                  navigate(prevRoute);\n                }\n              }\n            : () => dispatch(toggleSideBar)\n        }\n      >\n        {searching ? mdiArrowLeft : mdiMenu}\n      </MenuIcon>\n      <Input\n        ref={inputRef}\n        type=\"text\"\n        placeholder=\"Search your notes\"\n        onFocus={() => setSearching(true)}\n        value={value}\n        onChange={e => {\n          dispatch(setSearch(e.target.value));\n        }}\n        onKeyPress={e => {\n          if (e.key === 'Enter') {\n            if (route.name !== 'search') {\n              setPrevRoute(route.name);\n            }\n            navigate('search', { value });\n            inputRef.current!.blur();\n          }\n        }}\n      />\n      <Fade visible={!searching}>\n        <AccountIcon onClick={() => setMenuOpened(!menuOpened)}>\n          {mdiAccountCircleOutline}\n        </AccountIcon>\n      </Fade>\n      <Fade visible={menuOpened} speed={250}>\n        <HeaderAccountMenu\n          onHide={() => (menuOpened ? setMenuOpened(false) : null)}\n        />\n      </Fade>\n    </HeaderBar>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\n\nexport const useKeyboard = (\n  listener?: (ev: KeyboardEvent) => void,\n  deps: any[] = []\n) =>\n  useEffect(() => {\n    if (!listener) return;\n    window.addEventListener('keydown', listener);\n    return () => window.removeEventListener('keydown', listener);\n  }, deps);\n","import styled from '@emotion/styled';\nimport { ThemeProps } from '../../theme';\n\nexport const Card = styled.div<ThemeProps>`\n  background: ${({ theme }) => theme.background.primary};\n  display: flex;\n  align-items: center;\n  border-radius: 0.5em;\n  border: 1px solid ${({ theme }) => theme.color.border};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import React from 'react';\n\nimport styled from '@emotion/styled';\nimport { mdiCheckBoxOutline, mdiImageOutline } from '@mdi/js';\nimport { Card as UCard } from '../../../components/Card/Card';\nimport { Icon } from '../../../components/Icon/Icon';\nimport { Input as UInput } from '../../../components/Input/Input';\n\nconst Card = styled(UCard)`\n  position: fixed;\n  bottom: 0;\n  margin: 1em;\n  width: calc(100% - 2em);\n  height: 3em;\n  padding: 0;\n  z-index: 2;\n`;\nconst Actions = styled.div`\n  display: flex;\n  padding-right: 0.5em;\n`;\nconst Action = styled(Icon)`\n  padding: 0.5em;\n  width: 2.5em;\n  height: 2.5em;\n`;\nconst Input = styled(UInput)`\n  padding-left: 0.5em;\n`;\n\ninterface NewActionBarProps {\n  onNew: (options: { checked?: boolean; image?: boolean }) => void;\n}\nexport const NewActionBar: React.FC<NewActionBarProps> = ({ onNew }) => {\n  return (\n    <Card>\n      <Input\n        onClick={() => onNew({})}\n        readOnly={true}\n        type=\"text\"\n        placeholder=\"Take a note...\"\n      />\n      <Actions>\n        <Action onClick={() => onNew({ checked: true })}>\n          {mdiCheckBoxOutline}\n        </Action>\n        <Action onClick={() => onNew({ image: true })}>\n          {mdiImageOutline}\n        </Action>\n      </Actions>\n    </Card>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport { useClick } from '../../../components/useClick/useClick';\n\nimport anime from 'animejs';\nimport styled from '@emotion/styled';\nimport {\n  mdiPinOutline,\n  mdiBellPlusOutline,\n  mdiAccountPlusOutline,\n  mdiPaletteOutline,\n  mdiImageOutline,\n  mdiPackageDown,\n  mdiLabelOutline,\n  mdiCheckBoxOutline,\n  mdiUndo,\n  mdiRedo\n} from '@mdi/js';\nimport { ThemeProps } from '../../../theme';\nimport { Card as UCard } from '../../../components/Card/Card';\nimport { Icon } from '../../../components/Icon/Icon';\nimport { Input, TextArea } from '../../../components/Input/Input';\n\nconst expand = (el: HTMLElement) =>\n  anime({\n    targets: el,\n    duration: 250,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    bottom:\n      window.innerWidth <= 480 ? ['calc(-100% + 5em)', '0%'] : ['-40%', '0%']\n  });\n\nconst collapse = (el: HTMLElement) =>\n  anime({\n    targets: el,\n    duration: 200,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    bottom:\n      window.innerWidth <= 480 ? ['0%', 'calc(-100% + 5em)'] : ['0%', '-40%']\n  });\n\nconst Card = styled(UCard)`\n  position: fixed;\n  bottom: -40%;\n  width: 100%;\n  height: 40%;\n  padding: 0.25em;\n  z-index: 2;\n  border-radius: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  @media (max-width: 480px) {\n    height: calc(100% - 5em);\n    bottom: calc(-100% + 5em);\n  }\n`;\n\nconst TopBar = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0.25em 0.5em;\n`;\n\nconst TitleInput = styled(Input)`\n  font-size: 1.2rem;\n  height: 2em;\n  margin: 0;\n`;\n\nconst Body = styled.div`\n  width: 100%;\n  flex: 1;\n  padding: 0.25em 0.5em;\n`;\nconst BodyInput = styled(TextArea)`\n  font-size: 0.8rem;\n  margin: 0;\n`;\n\nconst Actions = styled.div`\n  width: 100%;\n  height: 2em;\n  overflow: hidden;\n  box-sizing: content-box;\n`;\nconst Scroll = styled.div`\n  display: flex;\n  min-width: 100%;\n  height: 100%;\n  overflow-x: auto;\n  white-space: nowrap;\n  -webkit-overflow-scrolling: touch;\n  box-sizing: content-box;\n  padding-bottom: 16px;\n`;\nconst Action = styled(Icon)`\n  font-size: 0.75rem;\n  width: 1.125rem;\n  height: 1.125rem;\n  padding: 0.5em 1em;\n  box-sizing: content-box;\n`;\nconst CloseButton = styled.span<ThemeProps>`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  cursor: pointer;\n  margin-left: auto;\n  margin-right: 1em;\n  padding-left: 2em;\n  padding-right: 2em;\n  font-size: 0.9rem;\n  font-weight: 600;\n  :hover {\n    background: ${({ theme }) => theme.background.hover};\n  }\n  @media (max-width: 480px) {\n    padding-left: 1em;\n    padding-right: 1em;\n  }\n`;\n\ninterface NewNoteProps {\n  checked: boolean;\n  onClose: () => void;\n  visible: boolean;\n}\nexport const NewNote: React.FC<NewNoteProps> = ({ onClose, visible }) => {\n  const cardRef = useRef<HTMLDivElement>(null);\n  const didMount = useRef(false);\n\n  useClick(\n    visible\n      ? ev => {\n          const card = cardRef.current!;\n          if (!card.contains(ev.target as Node)) {\n            onClose();\n          }\n        }\n      : undefined,\n    [visible]\n  );\n\n  useEffect(() => {\n    if (!didMount.current) {\n      didMount.current = true;\n      return;\n    }\n    const card = cardRef.current!;\n    const anim = visible ? expand(card) : collapse(card);\n    return anim.pause;\n  }, [visible]);\n\n  return (\n    <Card ref={cardRef}>\n      <TopBar>\n        <TitleInput type=\"text\" placeholder=\"Title\" />\n        <Icon>{mdiPinOutline}</Icon>\n      </TopBar>\n      <Body>\n        <BodyInput rows={1} placeholder=\"Take a note...\" />\n      </Body>\n      <Actions>\n        <Scroll>\n          <Action>{mdiBellPlusOutline}</Action>\n          <Action>{mdiAccountPlusOutline}</Action>\n          <Action>{mdiPaletteOutline}</Action>\n          <Action>{mdiImageOutline}</Action>\n          <Action>{mdiPackageDown}</Action>\n          <Action>{mdiLabelOutline}</Action>\n          <Action>{mdiCheckBoxOutline}</Action>\n          <Action>{mdiUndo}</Action>\n          <Action>{mdiRedo}</Action>\n          <CloseButton onClick={onClose}>Close</CloseButton>\n        </Scroll>\n      </Actions>\n    </Card>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { NewActionBar } from './ActionBar/NewActionBar';\nimport { NewNote } from './Note/NewNote';\n\nexport const New: React.FC = () => {\n  const [newMode, setNewMode] = useState(false);\n  const [checked, setChecked] = useState(false);\n\n  const onNew = ({\n    checked,\n    image\n  }: {\n    checked?: boolean;\n    image?: boolean;\n  }) => {\n    setNewMode(true);\n    setChecked(!!checked);\n  };\n\n  const onClose = () => {\n    setNewMode(false);\n    setChecked(false);\n  };\n\n  return (\n    <>\n      <NewActionBar onNew={onNew} />\n      <NewNote visible={newMode} onClose={onClose} checked={checked} />\n    </>\n  );\n};\n","import React, { useRef, useEffect } from 'react';\nimport { useClick } from '../../components/useClick/useClick';\n\nimport anime from 'animejs';\nimport styled from '@emotion/styled';\nimport {\n  mdiLightbulbOutline,\n  mdiBellOutline,\n  mdiLabelOutline,\n  mdiPencilOutline,\n  mdiPackageDown,\n  mdiTrashCanOutline\n} from '@mdi/js';\nimport { ThemeProps } from '../../theme';\nimport {\n  Menu as UMenu,\n  MenuItem,\n  Seperator,\n  StaticMenuItem,\n  Icon as UIcon,\n  WithIcon\n} from '../../components/Menu/Menu';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ReduxState } from '../../store/store';\nimport { toggleSideBar } from '../../store/actions/ui';\nimport { useRouter } from 'react-router5';\n\nconst expand = (sideBar: HTMLElement) =>\n  anime({\n    targets: sideBar,\n    duration: 250,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    left: ['-250px', '0']\n  });\nconst collapse = (sideBar: HTMLElement) =>\n  anime({\n    targets: sideBar,\n    duration: 250,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    left: ['0', '-250px']\n  });\n\nconst Menu = styled(UMenu)`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: -250px;\n  width: 250px;\n  height: 100vh;\n  z-index: 4;\n`;\n\nconst Icon = styled(UIcon)`\n  margin-right: 1.5em;\n  margin-left: 0.5em;\n`;\n\nconst Title = styled.h1`\n  cursor: pointer;\n  font-size: 2rem;\n  font-weight: normal;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  width: 100%;\n`;\n\nconst Footer = styled.small<ThemeProps>`\n  color: ${({ theme }) => theme.color.primaryLight};\n`;\n\nexport const SideBar: React.FC = () => {\n  const expanded = useSelector<ReduxState, boolean>(\n    state => state.ui.sideBarOpen\n  );\n  const didMountRef = useRef(false);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const { navigate } = useRouter();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const menu = menuRef.current!;\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n      return;\n    }\n    const anim = expanded ? expand(menu) : collapse(menu);\n    return anim.pause;\n  }, [expanded]);\n\n  useClick(\n    expanded\n      ? ev => {\n          if (!expanded) {\n            return undefined;\n          }\n          const menu = menuRef.current!;\n          if (!menu.contains(ev.target as Node)) {\n            dispatch(toggleSideBar);\n          }\n        }\n      : undefined,\n    [expanded]\n  );\n\n  const wrapClick = (fun: () => any) => () => {\n    dispatch(toggleSideBar);\n    fun();\n  };\n\n  return (\n    <Menu ref={menuRef}>\n      <StaticMenuItem onClick={wrapClick(() => navigate('notes'))}>\n        <Title>FH Notes</Title>\n      </StaticMenuItem>\n      <MenuItem onClick={wrapClick(() => navigate('notes'))}>\n        <WithIcon>\n          <Icon>{mdiLightbulbOutline}</Icon>\n          Notes\n        </WithIcon>\n      </MenuItem>\n      <MenuItem onClick={wrapClick(() => navigate('reminders'))}>\n        <WithIcon>\n          <Icon>{mdiBellOutline}</Icon>\n          Reminders\n        </WithIcon>\n      </MenuItem>\n      <Seperator />\n      <MenuItem onClick={wrapClick(() => navigate('label', { name: 'Ideas' }))}>\n        <WithIcon>\n          <Icon>{mdiLabelOutline}</Icon>\n          Ideas\n        </WithIcon>\n      </MenuItem>\n      <MenuItem\n        onClick={wrapClick(() => navigate('label', { name: 'Personal' }))}\n      >\n        <WithIcon>\n          <Icon>{mdiLabelOutline}</Icon>\n          Personal\n        </WithIcon>\n      </MenuItem>\n      <MenuItem onClick={wrapClick(() => navigate('label', { name: 'Work' }))}>\n        <WithIcon>\n          <Icon>{mdiLabelOutline}</Icon>\n          Work\n        </WithIcon>\n      </MenuItem>\n      <MenuItem onClick={wrapClick(() => navigate('labeledit'))}>\n        <WithIcon>\n          <Icon>{mdiPencilOutline}</Icon>\n          Edit Labels\n        </WithIcon>\n      </MenuItem>\n      <Seperator />\n      <MenuItem onClick={wrapClick(() => navigate('archive'))}>\n        <WithIcon>\n          <Icon>{mdiPackageDown}</Icon>\n          Archive\n        </WithIcon>\n      </MenuItem>\n      <MenuItem onClick={wrapClick(() => navigate('deleted'))}>\n        <WithIcon>\n          <Icon>{mdiTrashCanOutline}</Icon>\n          Deleted Items\n        </WithIcon>\n      </MenuItem>\n      <Seperator />\n      <StaticMenuItem>\n        <WithIcon>\n          <Footer>Created by Fawaz Hussain</Footer>\n        </WithIcon>\n      </StaticMenuItem>\n    </Menu>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouteNode } from 'react-router5';\n\nimport styled from '@emotion/styled';\nimport { Header } from '../Header/Header';\nimport { New } from '../New/New';\nimport { SideBar } from '../SideBar/SideBar';\n\nimport { ThemeProvider } from 'emotion-theming';\nimport { ReduxState } from '../../store/store';\nimport { darkTheme, lightTheme, ThemeProps, Themes } from '../../theme';\n\nexport const Container = styled.div<ThemeProps>`\n  background: ${({ theme }) => theme.background.secondary};\n  color: ${({ theme }) => theme.color.primary};\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-height: 100vh;\n  text-align: center;\n`;\n\nexport const App: React.FC = () => {\n  const [el, setEl] = useState<JSX.Element | null>(null);\n  const { route } = useRouteNode('');\n\n  const theme = useSelector<ReduxState, Themes>(state => state.ui.theme);\n\n  useEffect(() => {\n    switch (route.name) {\n      case 'notes':\n        setEl(<main>Test</main>);\n        break;\n      default:\n        setEl(<main>404 Not Found</main>);\n    }\n  }, [route.name]);\n\n  return (\n    <ThemeProvider theme={theme === Themes.LIGHT ? lightTheme : darkTheme}>\n      <Container>\n        <Header />\n        {el}\n        <New />\n        <SideBar />\n      </Container>\n    </ThemeProvider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\n\nimport { App } from './containers/App/App';\nimport { unregister } from './serviceWorker';\n\nimport createRouter from 'router5';\nimport browserPlugin from 'router5-plugin-browser';\nimport loggerPlugin from 'router5-plugin-logger';\nimport { RouterProvider } from 'react-router5';\nimport { routes } from './routes';\n\nimport './index.css';\n\nconst router = createRouter(routes, {\n  allowNotFound: true,\n  caseSensitive: true\n});\nrouter.usePlugin(browserPlugin());\nif (process.env.NODE_ENV === 'development') {\n  router.usePlugin(loggerPlugin);\n}\nrouter.start(() => {\n  render(\n    <Provider store={store}>\n      <RouterProvider router={router}>\n        <App />\n      </RouterProvider>\n    </Provider>,\n    document.getElementById('root')\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nunregister();\n","import { Route } from 'router5';\nexport const routes: Route[] = [\n  { name: 'notes', path: '/' },\n  { name: 'reminders', path: '/reminders' },\n  { name: 'archive', path: '/archive' },\n  { name: 'deleted', path: '/deleted' },\n  {\n    name: 'search',\n    path: '/search?:value',\n    defaultParams: { value: '' }\n  },\n  { name: 'labeledit', path: '/label/edit' },\n  { name: 'label', path: '/label/:name' },\n  { name: 'friends', path: '/friends' },\n  { name: 'settings', path: '/settings' },\n  { name: 'login', path: '/login' }\n];\n"],"sourceRoot":""}