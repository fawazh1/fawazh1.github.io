{"version":3,"sources":["store/reducers/ui.ts","store/store.ts","theme.ts","components/UI/Fade/Fade.tsx","components/UI/Icon/Icon.tsx","components/UI/Input/Input.tsx","components/Header/Bar/HeaderBar.tsx","components/UI/Switch/Switch.tsx","components/Header/AccountMenu/HeaderAccountMenu.tsx","store/actions/ui.ts","components/Header/Header.tsx","components/UI/useKeyboard/useKeyboard.tsx","components/UI/ActionBar/ActionBar.tsx","components/NewActionBar/NewActionBar.tsx","containers/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Themes","initialState","theme","LIGHT","reducer","combineReducers","ui","state","action","type","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","lightTheme","color","primary","primaryLight","secondary","border","background","hover","darkTheme","Fade","children","visible","speed","ref","useRef","useEffect","el","current","anime","begin","style","display","targets","duration","easing","opacity","show","complete","hide","EmpDiv","styled","div","Div","Icon","width","height","props","viewBox","d","Input","input","StyledHeaderBar","header","HeaderBar","expanded","margin","marginBottom","borderRadius","expand","collapse","USwitch","span","USlider","enabled","Switch","value","onSwitch","onClick","Menu","StaticMenuItem","UIcon","WithIcon","MenuItem","Seperator","HeaderAccountMenu","username","onHide","dispatch","useDispatch","useSelector","menuRef","clicked","ev","contains","target","addEventListener","removeEventListener","mdiAccountCircleOutline","mdiAccountMultiple","mdiSettings","mdiWeatherNight","DARK","toggleDarkTheme","mdiLoginVariant","EmpIcon","UInput","Header","listener","onMenuClick","onChange","useState","menuOpened","setMenuOpened","searching","setSearching","setValue","inputRef","key","blur","mdiArrowLeft","mdiMenu","placeholder","onFocus","e","ActionBar","UActionBar","Actions","Action","NewActionBar","checkBoxClicked","cropClicked","barClicked","readOnly","mdiCheckBoxOutline","mdiImageOutline","Container","Boolean","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02e1af3f.chunk.js","sourcesContent":["import { UIAction } from '../actions/ui';\n\nexport enum Themes {\n  LIGHT,\n  DARK\n}\n\nexport interface UIState {\n  theme: Themes;\n}\n\nconst initialState: UIState = {\n  theme: Themes.LIGHT\n};\n\nexport const uiReducer = (state = initialState, action: UIAction): UIState => {\n  switch (action.type) {\n    case 'TOGGLE_DARK_THEME':\n      return {\n        ...state,\n        theme: action.theme!\n      };\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { uiReducer, UIState } from './reducers/ui';\n\nexport interface ReduxState {\n  ui: UIState;\n}\nconst reducer = combineReducers<ReduxState>({\n  ui: uiReducer\n});\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","export interface Theme {\n  color: {\n    primary: string;\n    primaryLight: string;\n    secondary: string;\n    border: string;\n  };\n  background: {\n    primary: string;\n    secondary: string;\n    hover: string;\n  };\n}\n\nexport interface ThemeProps {\n  theme?: Theme;\n}\n\nexport const lightTheme: Theme = {\n  color: {\n    primary: '#000',\n    primaryLight: '#888',\n    secondary: '#FFEB3B',\n    border: '#ddd'\n  },\n  background: {\n    primary: '#fff',\n    secondary: '#fcfcfc',\n    hover: '#eee'\n  }\n};\n\nexport const darkTheme: Theme = {\n  color: {\n    primary: '#eee',\n    primaryLight: '#bbb',\n    secondary: '#C0B12C',\n    border: '#444'\n  },\n  background: {\n    primary: '#333',\n    secondary: '#222',\n    hover: '#444'\n  }\n};\n","import anime from 'animejs';\nimport React, { useRef, useEffect } from 'react';\n\nconst hide = (el: HTMLElement, speed: number) =>\n  anime({\n    targets: el,\n    duration: speed,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    opacity: [1, 0],\n    complete: () => (el.style.display = 'none')\n  });\nconst show = (el: HTMLElement, speed: number) =>\n  anime({\n    begin: () => (el.style.display = 'initial'),\n    targets: el,\n    duration: speed,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    opacity: [0, 1]\n  });\n\ninterface FadeProps {\n  visible: boolean;\n  speed?: number;\n}\nexport const Fade: React.FC<FadeProps> = ({\n  children,\n  visible,\n  speed = 100\n}) => {\n  const ref = useRef<any>(null);\n\n  useEffect(() => {\n    const el = ref.current!;\n    if (children) visible ? show(el, speed) : hide(el, speed);\n  }, [visible, speed, children]);\n\n  return <span ref={ref}>{children}</span>;\n};\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nimport { ThemeProps } from '../../../theme';\n\nconst EmpDiv = styled.div<ThemeProps>`\n  display: block;\n  padding: auto;\n  cursor: pointer;\n  & > svg > path {\n    fill: ${({ theme }) => theme.color.primary};\n  }\n  :hover {\n    background: ${({ theme }) => theme.background.hover};\n    border-radius: 50%;\n  }\n  :focus {\n    background: ${({ theme }) => theme.background.hover};\n    border-radius: 50%;\n  }\n`;\n\nconst Div = styled.div<ThemeProps>`\n  display: block;\n  padding: auto;\n  cursor: pointer;\n  & > svg > path {\n    fill: ${({ theme }) => theme.color.primaryLight};\n  }\n  :hover {\n    & > svg > path {\n      fill: ${({ theme }) => theme.color.primary};\n    }\n  }\n  :focus {\n    & > svg > path {\n      fill: ${({ theme }) => theme.color.primary};\n    }\n  }\n`;\ninterface IconProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  children: string;\n  width?: string;\n  height?: string;\n}\nexport const Icon: React.FC<IconProps> = ({\n  children,\n  width = '1.5em',\n  height = '1.5em',\n  ...props\n}) => {\n  return (\n    <Div {...props}>\n      <svg style={{ width, height }} viewBox=\"0 0 24 24\">\n        <path d={children} />\n      </svg>\n    </Div>\n  );\n};\nexport const EmpIcon: React.FC<IconProps> = ({\n  children,\n  width = '1.5em',\n  height = '1.5em',\n  ...props\n}) => {\n  return (\n    <EmpDiv {...props}>\n      <svg style={{ width, height }} viewBox=\"0 0 24 24\">\n        <path d={children} />\n      </svg>\n    </EmpDiv>\n  );\n};\n","import styled from '@emotion/styled';\n\nimport { ThemeProps } from '../../../theme';\n\nexport const Input = styled.input<ThemeProps>`\n  background: ${({ theme }) => theme.background.primary};\n  color: ${({ theme }) => theme.color.primary};\n  margin-left: 0.5em;\n  margin-right: 0.5em;\n  width: 100%;\n  height: 100%;\n  border: none;\n  outline: none;\n  :focus {\n    border: none;\n    outline: none;\n  }\n`;\n","import anime from 'animejs';\nimport styled from '@emotion/styled';\nimport React, { useRef, useEffect } from 'react';\n\nimport { ThemeProps } from '../../../theme';\n\nconst expand = (el: HTMLElement) =>\n  anime({\n    targets: el,\n    duration: 250,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    margin: ['1em', '0'],\n    marginBottom: '1em',\n    borderRadius: ['0.5em', '0']\n  });\nconst collapse = (el: HTMLElement) =>\n  anime({\n    targets: el,\n    duration: 200,\n    easing: 'cubicBezier(0.4, 0.0, 0.2, 1)',\n    margin: ['0', '1em'],\n    marginBottom: '1em',\n    borderRadius: ['0', '0.5em']\n  });\n\nconst StyledHeaderBar = styled.header<ThemeProps>`\n  background: ${({ theme }) => theme.background.primary};\n  color: ${({ theme }) => theme.color.primary};\n  display: flex;\n  align-items: center;\n  height: 3.5em;\n  margin-bottom: 1em;\n  padding: 0.25em;\n  border-bottom: 1px solid ${({ theme }) => theme.color.border};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.16), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\ninterface HeaderBarProps\n  extends ThemeProps,\n    React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement> {\n  expanded: boolean;\n}\nexport const HeaderBar: React.FC<HeaderBarProps> = ({ expanded, ...props }) => {\n  const ref = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    const el = ref.current!;\n    expanded ? expand(el) : collapse(el);\n  }, [expanded]);\n\n  return <StyledHeaderBar ref={ref} {...props} />;\n};\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nimport { ThemeProps } from '../../../theme';\n\nconst USwitch = styled.span<ThemeProps>`\n  position: relative;\n  display: inline-block;\n  width: 3em;\n  height: 1.5em;\n  padding: 0.1em;\n  border-radius: 1em;\n  background: ${({ theme }) => theme.background.hover};\n`;\n\nconst USlider = styled.span<ThemeProps & { enabled: boolean }>`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${({ enabled, theme }) =>\n    enabled ? theme.color.secondary : theme.background.hover};\n  transition: 0.2s;\n  border-radius: 1em;\n  &::before {\n    position: absolute;\n    content: '';\n    height: 1.2em;\n    width: 1.2em;\n    left: 0.3em;\n    bottom: 0.15em;\n    background-color: ${({ theme }) => theme.color.primary};\n    transition: 0.2s;\n    border-radius: 50%;\n    ${({ enabled }) => (enabled ? 'transform: translateX(1.2em)' : '')}\n  }\n`;\n\ninterface SwitchProps {\n  value: boolean;\n  onSwitch: (enabled: boolean) => void;\n}\nexport const Switch: React.FC<SwitchProps> = ({ value, onSwitch }) => {\n  return (\n    <USwitch onClick={() => onSwitch(!value)}>\n      <USlider enabled={value} />\n    </USwitch>\n  );\n};\n","import styled from '@emotion/styled';\nimport {\n  mdiAccountCircleOutline,\n  mdiAccountMultiple,\n  mdiSettings,\n  mdiWeatherNight,\n  mdiLoginVariant\n} from '@mdi/js';\nimport React, { useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { toggleDarkTheme } from '../../../store/actions/ui';\nimport { ThemeProps } from '../../../theme';\nimport { Switch } from '../../UI/Switch/Switch';\nimport { ReduxState } from '../../../store/store';\nimport { Themes } from '../../../store/reducers/ui';\nimport { Icon as UIcon } from '../../UI/Icon/Icon';\n\nconst Menu = styled.div<ThemeProps>`\n  position: absolute;\n  right: 1em;\n  top: 5em;\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n  max-height: calc(100vh - 8.5em);\n  background: ${({ theme }) => theme.background.primary};\n  border: 1px solid ${({ theme }) => theme.color.border};\n  border-radius: 0.25em;\n  overflow-y: auto;\n  padding: 0.25em 0;\n\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.16), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst StaticMenuItem = styled.span<ThemeProps>`\n  padding: 1em 1.5em;\n  font-size: 0.8rem;\n  width: 100%;\n  text-align: left;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Icon = styled(UIcon)`\n  padding-right: 0.5em;\n`;\n\nconst WithIcon = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nconst MenuItem = styled(StaticMenuItem)`\n  cursor: pointer;\n  &:hover {\n    background: ${({ theme }) => theme.background.hover};\n  }\n`;\n\nconst Seperator = styled.span<ThemeProps>`\n  margin: 0.25em 0.75em;\n  border: 1px solid ${({ theme }) => theme.color.border};\n`;\n\ninterface HeaderAccountMenuProps {\n  username?: string;\n  onHide: () => void;\n}\nexport const HeaderAccountMenu: React.FC<HeaderAccountMenuProps> = ({\n  username,\n  onHide\n}) => {\n  const dispatch = useDispatch();\n  const theme = useSelector<ReduxState, Themes>(state => state.ui.theme);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const clicked = (ev: MouseEvent) => {\n      const menu = menuRef.current!;\n      if (!menu.contains(ev.target as Node)) {\n        onHide();\n      }\n    };\n    window.addEventListener('click', clicked);\n    return () => window.removeEventListener('click', clicked);\n  }, [onHide]);\n\n  return (\n    <Menu ref={menuRef}>\n      <StaticMenuItem>\n        <WithIcon>\n          <Icon>{mdiAccountCircleOutline}</Icon>\n          Username\n        </WithIcon>\n      </StaticMenuItem>\n      <MenuItem>\n        <WithIcon>\n          <Icon>{mdiAccountMultiple}</Icon>\n          Friends\n        </WithIcon>\n      </MenuItem>\n      <Seperator />\n      <MenuItem>\n        <WithIcon>\n          <Icon>{mdiSettings}</Icon>\n          Settings\n        </WithIcon>\n      </MenuItem>\n      <StaticMenuItem>\n        <WithIcon>\n          <Icon>{mdiWeatherNight}</Icon>\n          Dark Theme\n        </WithIcon>\n        <Switch\n          value={theme === Themes.DARK}\n          onSwitch={value =>\n            dispatch(toggleDarkTheme(value ? Themes.DARK : Themes.LIGHT))\n          }\n        />\n      </StaticMenuItem>\n      <Seperator />\n      <MenuItem>\n        <WithIcon>\n          <Icon>{mdiLoginVariant}</Icon>\n          {username ? 'Log In' : 'Log Out'}\n        </WithIcon>\n      </MenuItem>\n    </Menu>\n  );\n};\n","import { Action } from 'redux';\n\nimport { Themes } from '../reducers/ui';\n\ntype ActionNames = 'TOGGLE_DARK_THEME';\nexport interface UIAction extends Action<ActionNames> {\n  theme?: Themes;\n}\n\nexport const toggleDarkTheme = (theme: Themes): UIAction => ({\n  type: 'TOGGLE_DARK_THEME',\n  theme\n});\n","import styled from '@emotion/styled';\nimport { mdiAccountCircleOutline, mdiMenu, mdiArrowLeft } from '@mdi/js';\nimport React, { useRef, useState, useEffect } from 'react';\n\nimport { Fade } from '../UI/Fade/Fade';\nimport { Icon as UIcon, EmpIcon as UEmpIcon } from '../UI/Icon/Icon';\nimport { Input as UInput } from '../UI/Input/Input';\nimport { HeaderBar } from './Bar/HeaderBar';\nimport { useKeyboard } from '../UI/useKeyboard/useKeyboard';\nimport { HeaderAccountMenu } from './AccountMenu/HeaderAccountMenu';\n\nconst Icon = styled(UIcon)`\n  padding: 0.5em;\n`;\nconst EmpIcon = styled(UEmpIcon)`\n  padding: 0.5em;\n`;\nconst Input = styled(UInput)`\n  flex: auto;\n`;\n\nexport interface HeaderProps {\n  onMenuClick?: () => void;\n  onChange?: (value: string) => void;\n}\nexport const Header: React.FC<HeaderProps> = ({ onMenuClick, onChange }) => {\n  const [menuOpened, setMenuOpened] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [value, setValue] = useState('');\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (onChange) onChange(value);\n  }, [value, onChange]);\n\n  useKeyboard(ev => {\n    if (ev.key === 'Escape') {\n      setSearching(false);\n      inputRef.current!.blur();\n    }\n  });\n\n  useEffect(() => {\n    if (!searching) {\n      setValue('');\n    }\n  }, [searching, setValue]);\n\n  return (\n    <HeaderBar expanded={searching}>\n      <EmpIcon onClick={searching ? () => setSearching(false) : onMenuClick}>\n        {searching ? mdiArrowLeft : mdiMenu}\n      </EmpIcon>\n      <Input\n        ref={inputRef}\n        type=\"text\"\n        placeholder=\"Search your notes\"\n        onFocus={() => setSearching(true)}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      <div>\n        <Fade visible={!searching}>\n          <Icon onClick={() => setMenuOpened(!menuOpened)}>\n            {mdiAccountCircleOutline}\n          </Icon>\n        </Fade>\n        <Fade visible={menuOpened} speed={250}>\n          <HeaderAccountMenu\n            onHide={() => (menuOpened ? setMenuOpened(false) : null)}\n          />\n        </Fade>\n      </div>\n    </HeaderBar>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react';\n\nexport const useKeyboard = (listener: (ev: KeyboardEvent) => void) =>\n  useEffect(() => {\n    window.addEventListener('keydown', listener);\n    return () => window.removeEventListener('keydown', listener);\n  }, []);\n","import styled from '@emotion/styled';\n\nimport { ThemeProps } from '../../../theme';\n\nexport const ActionBar = styled.div<ThemeProps>`\n  background: ${({ theme }) => theme.background.primary};\n  display: flex;\n  align-items: center;\n  height: 3em;\n  width: 100%;\n  padding: 0.5em;\n  border: 1px solid ${({ theme }) => theme.color.border};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import styled from '@emotion/styled';\nimport { mdiCheckBoxOutline, mdiImageOutline } from '@mdi/js';\nimport React from 'react';\n\nimport { ActionBar as UActionBar } from '../UI/ActionBar/ActionBar';\nimport { Icon } from '../UI/Icon/Icon';\nimport { Input } from '../UI/Input/Input';\n\nconst ActionBar = styled(UActionBar)`\n  position: fixed;\n  bottom: 0;\n`;\nconst Actions = styled.span`\n  display: flex;\n`;\nconst Action = styled(Icon)`\n  padding: 0.5em;\n`;\n\ninterface NewActionBarProps {\n  checkBoxClicked?: () => void;\n  cropClicked?: () => void;\n  barClicked?: () => void;\n}\nexport const NewActionBar: React.FC<NewActionBarProps> = ({\n  checkBoxClicked,\n  cropClicked,\n  barClicked\n}) => {\n  return (\n    <ActionBar>\n      <Input\n        onClick={barClicked}\n        readOnly={true}\n        type=\"text\"\n        placeholder=\"Take a note...\"\n      />\n      <Actions>\n        <Action onClick={checkBoxClicked}>{mdiCheckBoxOutline}</Action>\n        <Action onClick={cropClicked}>{mdiImageOutline}</Action>\n      </Actions>\n    </ActionBar>\n  );\n};\n","import styled from '@emotion/styled';\nimport { ThemeProvider } from 'emotion-theming';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { darkTheme, lightTheme, ThemeProps } from '../../theme';\nimport { Header } from '../../components/Header/Header';\nimport { NewActionBar } from '../../components/NewActionBar/NewActionBar';\nimport { ReduxState } from '../../store/store';\nimport { Themes } from '../../store/reducers/ui';\n\nexport const Container = styled.div<ThemeProps>`\n  background: ${({ theme }) => theme.background.secondary};\n  color: ${({ theme }) => theme.color.primary};\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-height: 100vh;\n  text-align: center;\n`;\n\nexport const App: React.FC = () => {\n  const theme = useSelector<ReduxState, Themes>(state => state.ui.theme);\n\n  return (\n    <ThemeProvider theme={theme === Themes.LIGHT ? lightTheme : darkTheme}>\n      <Router>\n        <Container>\n          <Header />\n          <main>Test</main>\n          <NewActionBar />\n        </Container>\n      </Router>\n    </ThemeProvider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\n\nimport { App } from './containers/App/App';\nimport { unregister } from './serviceWorker';\n\nimport './index.css';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nunregister();\n"],"sourceRoot":""}